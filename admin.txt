com.example.demo
AdminServiceApplication.java

package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.netflix.eureka.EnableEurekaClient;

@SpringBootApplication
@EnableEurekaClient
public class AdminServiceApplication {

	public static void main(String[] args) {
		SpringApplication.run(AdminServiceApplication.class, args);
	}

}

--------------------------------------------------
com.example.demo.controller
AdminController.java

package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entity.Admin;
import com.example.demo.service.AdminService;

@RestController
@RequestMapping("/admin")
public class AdminController {

	@Autowired
	private AdminService service;
	
	@GetMapping("/movie")
	public List<Admin> getAllDetails()
	{
		return this.service.getAllMovie();
	}
	
	@PostMapping("/add")
	public Admin addMovie(@RequestBody Admin a)
	{
		return this.service.addAdmin(a);
		
	}
	@PutMapping("/update")
	public Admin updatingMovie(@RequestBody Admin admin)

	{
		return this.service.updateMovie(admin);
		
	}
	@DeleteMapping("/delete/{mid}")
	public String deletMovie(@PathVariable("mid")int mid)
	{
		return this.service.deleteMovie(mid);
	}
	
	@GetMapping("/searchMovieByRating/{id}")
	public List<Admin> searchMovieByRating(@PathVariable("id") int id){
		return this.service.searchMovieByRating(id);
	}
	
	@GetMapping("/searchMovieByLeadActor/{name}")
	public List<Admin> searchMovieByLeadActor(@PathVariable("name") String name){
		return this.service.searchMovieByLeadActor(name);
	}
}

---------------------------------------------------------------------------

com.example.demo.dao
AdminRepository.java


package com.example.demo.dao;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import com.example.demo.entity.Admin;
@Repository
public interface AdminRepository extends JpaRepository<Admin,Integer>{

	@Query("select u from Admin u where u.rating=?1")
	public List<Admin> searchMovieByRating(int rate);
	
	@Query("select u from Admin u where u.lead_actor1=?1")
	public List<Admin> searchMovieByLeadActor(String name);
}

----------------------------------------------------------------------------

com.example.demo.entity
Admin.java

package com.example.demo.entity;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name="movies")
public class Admin{
	
	@Id
	int mid;	
	String movie_name;
	int release_year;
	String language;
	int rating;
	int duration_in_mins;
	String movie_type;
	String movie_category;
	String director_name;
	String lead_actor1;
	String lead_actor2;
	int rental_cost;
	
	public Admin() {
		// TODO Auto-generated constructor stub
	}

	public Admin(int mid, String movie_name, int release_year, String language, int rating, int duration_in_mins,
			String movie_type, String movie_category, String director_name, String lead_actor1, String lead_actor2,
			int rental_cost) {
		super();
		this.mid = mid;
		this.movie_name = movie_name;
		this.release_year = release_year;
		this.language = language;
		this.rating = rating;
		this.duration_in_mins = duration_in_mins;
		this.movie_type = movie_type;
		this.movie_category = movie_category;
		this.director_name = director_name;
		this.lead_actor1 = lead_actor1;
		this.lead_actor2 = lead_actor2;
		this.rental_cost = rental_cost;
	}

	public int getMid() {
		return mid;
	}

	public void setMid(int mid) {
		this.mid = mid;
	}

	public String getMovie_name() {
		return movie_name;
	}

	public void setMovie_name(String movie_name) {
		this.movie_name = movie_name;
	}

	public int getRelease_year() {
		return release_year;
	}

	public void setRelease_year(int release_year) {
		this.release_year = release_year;
	}

	public String getLanguage() {
		return language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	public int getRating() {
		return rating;
	}

	public void setRating(int rating) {
		this.rating = rating;
	}

	public int getDuration_in_mins() {
		return duration_in_mins;
	}

	public void setDuration_in_mins(int duration_in_mins) {
		this.duration_in_mins = duration_in_mins;
	}

	public String getMovie_type() {
		return movie_type;
	}

	public void setMovie_type(String movie_type) {
		this.movie_type = movie_type;
	}

	public String getMovie_category() {
		return movie_category;
	}

	public void setMovie_category(String movie_category) {
		this.movie_category = movie_category;
	}

	public String getDirector_name() {
		return director_name;
	}

	public void setDirector_name(String director_name) {
		this.director_name = director_name;
	}

	public String getLead_actor1() {
		return lead_actor1;
	}

	public void setLead_actor1(String lead_actor1) {
		this.lead_actor1 = lead_actor1;
	}

	public String getLead_actor2() {
		return lead_actor2;
	}

	public void setLead_actor2(String lead_actor2) {
		this.lead_actor2 = lead_actor2;
	}

	public int getRental_cost() {
		return rental_cost;
	}

	public void setRental_cost(int rental_cost) {
		this.rental_cost = rental_cost;
	}
	
	
	
	
}

-------------------------------------------------------------

com.example.demo.service
AdminService.java


package com.example.demo.service;

import java.util.List;

import com.example.demo.entity.Admin;

public interface AdminService {
	
public Admin addAdmin(Admin admin);
public List<Admin> getAllMovie();
public Admin updateMovie(Admin admin);
public String deleteMovie(int id);
public List<Admin> searchMovieByRating(int rate);
public List<Admin> searchMovieByLeadActor(String name);

}

-----------------------------------------------------------------

com.example.demo.service
AdminServiceImpl.java


package com.example.demo.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.dao.AdminRepository;
import com.example.demo.entity.Admin;

@Service
public class AdminServiceImpl implements AdminService {

	@Autowired
	private AdminRepository repo;
	
	@Override
	public Admin addAdmin(Admin admin) {
		// TODO Auto-generated method stub
		return repo.save(admin);
	}
	@Override
	public List<Admin> getAllMovie() {
		// TODO Auto-generated method stub
		return repo.findAll();
	}
	@Override
	public Admin updateMovie(Admin admin) {
		// TODO Auto-generated method stub
		return repo.save(admin);
	}
	@Override
	public String deleteMovie(int id) {
		// TODO Auto-generated method stub
	this.repo.deleteById(id);
	return "Movie deleted";
	}
	@Override
	public List<Admin> searchMovieByRating(int rate) {
		// TODO Auto-generated method stub
		return repo.searchMovieByRating(rate);
	}
	@Override
	public List<Admin> searchMovieByLeadActor(String name) {
		// TODO Auto-generated method stub
		return repo.searchMovieByLeadActor(name);
	}
	

}

--------------------------------------------------------------------------------------
application property




server.port=8081
spring.application.name=adminservice
#spring.datasource.name=testtodo
spring.datasource.url=jdbc:mysql://localhost:3306/fisglobal
spring.datasource.username=root
spring.datasource.password=rps@12345
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka


-----------------------------------------------------------------------




package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.netflix.eureka.EnableEurekaClient;

@SpringBootApplication
@EnableEurekaClient
public class FisVideoLmsCloudGatewayApplication {

	public static void main(String[] args) {
		SpringApplication.run(FisVideoLmsCloudGatewayApplication.class, args);
	}

}

--------------------------------------------------------------------------------

package com.example.demo;

import org.springframework.cloud.gateway.route.RouteLocator;
import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class GatewayConfigs {
	
	@Bean
	public RouteLocator getRoutesLocator(RouteLocatorBuilder rout) {
		
		return rout.routes()
				.route(p->p.path("/customer/**").uri("lb://customerservice/customer"))
				.route(p->p.path("/admin/**").uri("lb://adminservice/admin"))
				.build();
	}

}

-------------------------------------------------------------------------------

server.port=8765
spring.application.name=fisgateway
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.gateway.discovery.locator.enabled=true

-----------------------------------------------------------------------------

