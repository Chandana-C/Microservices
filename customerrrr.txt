
com.example.demo

package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
import org.springframework.cloud.openfeign.EnableFeignClients;

@SpringBootApplication
@EnableFeignClients(value="com.example.demo.service")
@EnableEurekaClient
public class FISVideoLMSCustomer {

	public static void main(String[] args) {
		SpringApplication.run(FISVideoLMSCustomer.class, args);
	}

}

---------------------------------------------------------------------------
com.example.demo.controller
CustomerController.java

package com.example.demo.controller;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entity.AdminDto;
import com.example.demo.entity.Customer;
import com.example.demo.service.CustomerService;

@RestController
@RequestMapping("/customer")
public class CustomerController {

	private Logger logger = LoggerFactory.getLogger(CustomerController.class);
	
	@Autowired
	private CustomerService service;
	
	@GetMapping("/getall")
	public List<Customer> getAllDetails()
	{
		return this.service.getAllCust();
	}
	
	@PostMapping("/addcustomer")
	public Customer addCustomer(@RequestBody Customer cust)
	{
		return this.service.add(cust);
		
	}
	@PutMapping("/updatecustomer")
	public Customer updateCustomer(@RequestBody Customer cust)

	{
		return this.service.update(cust);
		
	}
	@DeleteMapping("/delete/{cid}")
	public String deletMovie(@PathVariable("cid")int cid)
	{
		return this.service.delete(cid);
	}
	
	@GetMapping("/getmoviesByRating/{id}")
	public List<AdminDto> getMovieByRating(@PathVariable("id") int id){
		logger.info("Movies...");
		return service.findMovieByRating(id);
	}

	
	@GetMapping("/getmoviesByLeadActor/{name}")
	public List<AdminDto> getMovieByLeadActor(@PathVariable("name") String name){
		logger.info("Movies...");
		return service.findMovieByLeadActor(name);
	}
	
}

--------------------------------------------------
com.example.demo.repo
CustomerController.java


package com.example.demo.dao;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.example.demo.entity.Customer;


@Repository
public interface CustomerRepository extends JpaRepository<Customer,Integer>{

}

-------------------------------------------------------------------
com.example.demo.entity
Customer.java


package com.example.demo.entity;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name="customer")
public class Customer{
	
	@Id
	int customer_id;
	String customer_name;
	int contact_no;
	String contact_address;
	String date_of_registration;
	int age;
	String movie_type ;
	String lead_actor1;
	int rating;
	
	public Customer() {
		// TODO Auto-generated constructor stub
	}

	public Customer(int customer_id, String customer_name, int contact_no, String contact_address,
			String date_of_registration, int age, String movie_type, String lead_actor1, int rating) {
		super();
		this.customer_id = customer_id;
		this.customer_name = customer_name;
		this.contact_no = contact_no;
		this.contact_address = contact_address;
		this.date_of_registration = date_of_registration;
		this.age = age;
		this.movie_type = movie_type;
		this.lead_actor1 = lead_actor1;
		this.rating = rating;
	}

	public int getCustomer_id() {
		return customer_id;
	}

	public void setCustomer_id(int customer_id) {
		this.customer_id = customer_id;
	}

	public String getCustomer_name() {
		return customer_name;
	}

	public void setCustomer_name(String customer_name) {
		this.customer_name = customer_name;
	}

	public int getContact_no() {
		return contact_no;
	}

	public void setContact_no(int contact_no) {
		this.contact_no = contact_no;
	}

	public String getContact_address() {
		return contact_address;
	}

	public void setContact_address(String contact_address) {
		this.contact_address = contact_address;
	}

	public String getDate_of_registration() {
		return date_of_registration;
	}

	public void setDate_of_registration(String date_of_registration) {
		this.date_of_registration = date_of_registration;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	public String getMovie_type() {
		return movie_type;
	}

	public void setMovie_type(String movie_type) {
		this.movie_type = movie_type;
	}

	public String getLead_actor1() {
		return lead_actor1;
	}

	public void setLead_actor1(String lead_actor1) {
		this.lead_actor1 = lead_actor1;
	}

	public int getRating() {
		return rating;
	}

	public void setRating(int rating) {
		this.rating = rating;
	}

	
	
	
}


AdminDto.java

package com.example.demo.entity;

public class AdminDto {

int mid;
	
	String movie_name;	
	int release_year;
	String language;
	int rating;
	int duration_in_mins;
	String movie_type;
	String movie_category;
	String director_name;
	String lead_actor1;
	String lead_actor2;
	int rental_cost;

	public AdminDto(int mid, String movie_name, int release_year, String language, int rating, int duration_in_mins,
			String movie_type, String movie_category, String director_name, String lead_actor1, String lead_actor2,
			int rental_cost) {
		super();
		this.mid = mid;
		this.movie_name = movie_name;
		this.release_year = release_year;
		this.language = language;
		this.rating = rating;
		this.duration_in_mins = duration_in_mins;
		this.movie_type = movie_type;
		this.movie_category = movie_category;
		this.director_name = director_name;
		this.lead_actor1 = lead_actor1;
		this.lead_actor2 = lead_actor2;
		this.rental_cost = rental_cost;
	}

	public AdminDto() {
		super();
		// TODO Auto-generated constructor stub
	}

	public int getMid() {
		return mid;
	}

	public void setMid(int mid) {
		this.mid = mid;
	}

	public String getMovie_name() {
		return movie_name;
	}

	public void setMovie_name(String movie_name) {
		this.movie_name = movie_name;
	}

	public int getRelease_year() {
		return release_year;
	}

	public void setRelease_year(int release_year) {
		this.release_year = release_year;
	}

	public String getLanguage() {
		return language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	public int getRating() {
		return rating;
	}

	public void setRating(int rating) {
		this.rating = rating;
	}

	public int getDuration_in_mins() {
		return duration_in_mins;
	}

	public void setDuration_in_mins(int duration_in_mins) {
		this.duration_in_mins = duration_in_mins;
	}

	public String getMovie_type() {
		return movie_type;
	}

	public void setMovie_type(String movie_type) {
		this.movie_type = movie_type;
	}

	public String getMovie_category() {
		return movie_category;
	}

	public void setMovie_category(String movie_category) {
		this.movie_category = movie_category;
	}

	public String getDirector_name() {
		return director_name;
	}

	public void setDirector_name(String director_name) {
		this.director_name = director_name;
	}

	public String getLead_actor1() {
		return lead_actor1;
	}

	public void setLead_actor1(String lead_actor1) {
		this.lead_actor1 = lead_actor1;
	}

	public String getLead_actor2() {
		return lead_actor2;
	}

	public void setLead_actor2(String lead_actor2) {
		this.lead_actor2 = lead_actor2;
	}

	public int getRental_cost() {
		return rental_cost;
	}

	public void setRental_cost(int rental_cost) {
		this.rental_cost = rental_cost;
	}
	
	
}

----------------------------------------------------------------------
com.example.demo.service

CustomerService.java

package com.example.demo.service;

import java.util.List;

import com.example.demo.entity.AdminDto;
import com.example.demo.entity.Customer;


public interface CustomerService {

	public Customer add(Customer cust);
	public List<Customer> getAllCust();
	public Customer update(Customer cust);
	public String delete(int id);
	public List<AdminDto> findMovieByRating(int id);
	public List<AdminDto> findMovieByLeadActor(String name);
}


CustomerServiceImpl.java

package com.example.demo.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.dao.CustomerRepository;
import com.example.demo.entity.AdminDto;
import com.example.demo.entity.Customer;

@Service
public class CustomerServiceImpl implements CustomerService {

	@Autowired 
	CustomerRepository repo;
	
	@Autowired
	FeignProxy proxy;
	
	@Override
	public Customer add(Customer cust) {
		// TODO Auto-generated method stub
		return repo.save(cust);
	}

	@Override
	public List<Customer> getAllCust() {
		// TODO Auto-generated method stub
		return repo.findAll();
	}

	@Override
	public Customer update(Customer cust) {
		// TODO Auto-generated method stub
		return repo.save(cust);
	}

	@Override
	public String delete(int id) {
		// TODO Auto-generated method stub
		repo.deleteById(id);
		return "Customer Deleted";
	}


	@Override
	public List<AdminDto> findMovieByRating(int id) {
		// TODO Auto-generated method stub
		return proxy.searchMovieByRating(id);
	}

	@Override
	public List<AdminDto> findMovieByLeadActor(String name) {
		// TODO Auto-generated method stub
		return proxy.searchMovieByLeadActor(name);
	}

}

FeignProxy.java

package com.example.demo.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.dao.CustomerRepository;
import com.example.demo.entity.AdminDto;
import com.example.demo.entity.Customer;

@Service
public class CustomerServiceImpl implements CustomerService {

	@Autowired 
	CustomerRepository repo;
	
	@Autowired
	FeignProxy proxy;
	
	@Override
	public Customer add(Customer cust) {
		// TODO Auto-generated method stub
		return repo.save(cust);
	}

	@Override
	public List<Customer> getAllCust() {
		// TODO Auto-generated method stub
		return repo.findAll();
	}

	@Override
	public Customer update(Customer cust) {
		// TODO Auto-generated method stub
		return repo.save(cust);
	}

	@Override
	public String delete(int id) {
		// TODO Auto-generated method stub
		repo.deleteById(id);
		return "Customer Deleted";
	}


	@Override
	public List<AdminDto> findMovieByRating(int id) {
		// TODO Auto-generated method stub
		return proxy.searchMovieByRating(id);
	}

	@Override
	public List<AdminDto> findMovieByLeadActor(String name) {
		// TODO Auto-generated method stub
		return proxy.searchMovieByLeadActor(name);
	}

}

---------------------------------------------
application properties

server.port=8082
spring.application.name=customerservice
#spring.datasource.name=testtodo
spring.datasource.url=jdbc:mysql://localhost:3306/fisglobal
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka



create table customer(customer_id int,
			  customer_name varchar(10),
			  contact_no int(50),
			  contact_address varchar(10),
		        date_of_registration varchar(10),
			  age int,
			  rating int,
			  lead_actor1 varchar(10),
			  lead_actor2 varchar(10),
	              movie_type varchar(10));
               

 insert into customer
 values (1,'Chandana',9181818167,'Bangalore','10-1-19',20,6,'Raksh','Lohi','Crime');


insert into customer(001,'Chandana',9181818167,'Bangalore','10july',20,6,'Raksh','Lohi','Crime');




insert into customer(customer_id,customer_name,contact_no,contact_address,date_of_registration,age,lead_actor1,lead_actor2,rating,movie_type)values(1,'Chandana',23493710,'Bangalore','10july',20,'Raksh','Lohi',6,'Crime');


customer_id
	 customer_name
	 contact_no
	contact_address
	 date_of_registration
	 age
	 movie_type 
	lead_actor1
	 lead_actor2
	 rating